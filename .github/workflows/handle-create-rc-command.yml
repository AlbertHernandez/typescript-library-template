---
name: Handle Create RC command

on:
  repository_dispatch:
    types: [create-rc-command]

jobs:
  update-library-version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
    steps:
      - name: Checkout 🛬
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.pull_request.head.ref }}
      - name: Log
        env:
          PAYLOAD_CONTEXT: ${{ toJson(github.event.client_payload) }}
          PULL_REQUEST: ${{ toJson(github.event.client_payload.pull_request)) }}
        run: |
          echo "HEAD: ${{ github.event.client_payload.pull_request.head.ref }}"
          echo "PR: $PULL_REQUEST"
          echo "Client payload: $PAYLOAD_CONTEXT"

#  release-rc:
#    runs-on: ubuntu-latest
#    needs: update-library-version
#    if: ${{ needs.update-library-version.outputs.tag }}
#    steps:
#      - name: Checkout 🛬
#        uses: actions/checkout@v4
#        with:
#          ref: ${{ github.event.client_payload.pull_request.head.ref }}
#      - name: Setup Node ⚙️
#        uses: ./.github/actions/setup-node
#        with:
#          npm_token: ${{ secrets.NPM_TOKEN }}
#      - uses: JS-DevTools/npm-publish@v3
#        with:
#          token: ${{ secrets.NPM_TOKEN }}
#          tag: ${{ github.event.client_payload.pull_request.head.ref }}
#          dry-run: true
#      - name: Mark command as done ✅
#        uses: peter-evans/create-or-update-comment@v4
#        with:
#          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
#          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
#          body: |
#            ## 🐣 The new release candidate is ready to be used
#
#            Clients can use it by running:
#
#            ```bash
#            npm install --save typescript-library-template-example@${{ github.event.client_payload.pull_request.head.ref }}
#            ```
#          reactions: hooray
